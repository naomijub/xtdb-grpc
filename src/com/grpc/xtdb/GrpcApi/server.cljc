;;;----------------------------------------------------------------------------------
;;; Generated by protoc-gen-clojure.  DO NOT EDIT
;;;
;;; GRPC com.grpc.xtdb.GrpcApi Service Implementation
;;;----------------------------------------------------------------------------------
(ns com.grpc.xtdb.GrpcApi.server
  (:require [com.grpc.xtdb :refer :all]
            [com.google.protobuf :as com.google.protobuf]
            [com.grpc.xtdb :as com.grpc.xtdb]))

;-----------------------------------------------------------------------------
; GRPC GrpcApi
;-----------------------------------------------------------------------------
(defprotocol Service
  (status [this param])
  (entity [this param])
  (entity_tx [this param])
  (entity_history [this param])
  (submit_tx [this param]))

(defn- status-dispatch
  [ctx request]
  (status ctx request))
(defn- entity-dispatch
  [ctx request]
  (entity ctx request))
(defn- entity_tx-dispatch
  [ctx request]
  (entity_tx ctx request))
(defn- entity_history-dispatch
  [ctx request]
  (entity_history ctx request))
(defn- submit_tx-dispatch
  [ctx request]
  (submit_tx ctx request))

(def ^:const rpc-metadata
  [{:pkg "com.grpc.xtdb" :service "GrpcApi" :method "status" :method-fn status-dispatch :server-streaming false :client-streaming false :input pb->Empty :output new-StatusResponse}
   {:pkg "com.grpc.xtdb" :service "GrpcApi" :method "entity" :method-fn entity-dispatch :server-streaming false :client-streaming false :input pb->EntityRequest :output new-EntityResponse}
   {:pkg "com.grpc.xtdb" :service "GrpcApi" :method "entity_tx" :method-fn entity_tx-dispatch :server-streaming false :client-streaming false :input pb->EntityTxRequest :output new-EntityTxResponse}
   {:pkg "com.grpc.xtdb" :service "GrpcApi" :method "entity_history" :method-fn entity_history-dispatch :server-streaming false :client-streaming false :input pb->EntityHistoryRequest :output new-EntityHistoryResponse}
   {:pkg "com.grpc.xtdb" :service "GrpcApi" :method "submit_tx" :method-fn submit_tx-dispatch :server-streaming false :client-streaming false :input pb->SubmitRequest :output new-SubmitResponse}])
